# Reverse Proxy Configuration
# Domain: {{DOMAIN}}
# Backend Port: {{PORT}}

upstream {{DOMAIN}}_backend {
    server 127.0.0.1:{{PORT}};
    keepalive 32;
}

server {
    listen 80;
    {{SSL_LISTEN}}
    
    server_name {{DOMAIN}} www.{{DOMAIN}};

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # SSL Configuration
    {{SSL_CERTIFICATE}}
    {{SSL_CERTIFICATE_KEY}}
    {{SSL_CONFIG}}

    # Client body size
    client_max_body_size 100M;

    # Proxy configuration
    location / {
        proxy_pass http://{{DOMAIN}}_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
        
        # Proxy cache (optional)
        # proxy_cache my_cache;
        # proxy_cache_valid 200 1h;
        # proxy_cache_use_stale error timeout invalid_header updating;
    }

    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Rate limiting (optional)
    # location /api/ {
    #     limit_req zone=api burst=20 nodelay;
    #     proxy_pass http://{{DOMAIN}}_backend;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Static file handling (if nginx should serve some static files)
    location /static/ {
        alias /var/www/{{DOMAIN}}/static/;
        expires 1M;
        add_header Cache-Control "public, immutable";
        add_header Pragma public;
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # Error and access logs
    error_log /var/log/nginx/{{DOMAIN}}_error.log;
    access_log /var/log/nginx/{{DOMAIN}}_access.log;
}

# Redirect www to non-www (optional)
server {
    listen 80;
    {{SSL_LISTEN}}
    server_name www.{{DOMAIN}};
    return 301 $scheme://{{DOMAIN}}$request_uri;
}

# Rate limiting zone (add to main nginx.conf if using rate limiting)
# limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
