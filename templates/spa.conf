# Single Page Application (SPA) Configuration
# Domain: {{DOMAIN}}
# Root: {{ROOT_PATH}}
# For React, Vue, Angular applications

server {
    listen 80;
    
    server_name {{DOMAIN}};
    root {{ROOT_PATH}};
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # SPA routing - all requests go to index.html
    location / {
        try_files $uri $uri/ /index.html;
        
        # Prevent caching of index.html
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # API proxy (optional - uncomment and configure if needed)
    # location /api/ {
    #     proxy_pass http://localhost:3001;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_cache_bypass $http_upgrade;
    # }

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Pragma public;
        add_header Vary Accept-Encoding;
        access_log off;
        
        # Handle pre-compressed files
        location ~* \.(js|css)$ {
            gzip_static on;
        }
    }

    # Progressive Web App manifest
    location = /manifest.json {
        expires 1d;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
    }

    # Service worker (should not be cached)
    location = /service-worker.js {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }

    # Deny access to source maps in production
    location ~* \.map$ {
        deny all;
    }

    # Favicon
    location = /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    # Robots.txt
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
        log_not_found off;
    }

    # Security headers for specific file types
    location ~* \.(html|htm)$ {
        expires 1h;
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
    }

    # Error and access logs
    error_log /var/log/nginx/{{LOG_DOMAIN}}_error.log;
    access_log /var/log/nginx/{{LOG_DOMAIN}}_access.log;
}

{{REDIRECT_BLOCK}}
